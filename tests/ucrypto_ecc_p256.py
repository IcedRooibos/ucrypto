try:
    from _crypto import ECC
except ImportError:
    print("SKIP")
    raise SystemExit

P256 = ECC.Curve(
    0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF,
    -0x3,
    0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B,
    0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551,
    0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296,
    0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5,
)

S = ECC.Point(
    0xDE2444BEBC8D36E682EDD27E0F271508617519B3221A8FA0B77CAB3989DA97C9,
    0xC093AE7FF36E5380FC01A5AAD1E66659702DE80F53CEC576B6350B243042A256,
    P256,
)

T = ECC.Point(
    0x55A8B00F8DA1D44E62F6B3B25316212E39540DC861C89575BB8CF92E35E0986B,
    0x5421C3209C2D6C704835D82AC4C3DD90F61A8A52598B9E7AB656E9D8C8B24316,
    P256,
)

print("S==S  = ", S == S)

print("S==T  = ", S == T)

R = S + T
print(f"S+T   = ({R.x:x}, {R.y:x})")

R = S - T
print(f"S-T   = ({R.x:x}, {R.y:x})")

R = 2 * S
print(f"2S    = ({R.x:x}, {R.y:x})")

d = 0xC51E4753AFDEC1E6B6C6A5B992F43F8DD0C7A8933072708B6522468B2FFB06FD
e = 0xD37F628ECE72A462F0145CBEFE3F0B355EE8332D37ACDD83A358016AEA029DB7
R = (d * S) + (e * T)
print(f"dS+eT = ({R.x:x}, {R.y:x})")

R = S + S
print(f"S+S   = ({R.x:x}, {R.y:x})")

R = S - S
print(f"S-S   = ({R.x:x}, {R.y:x})")
